/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { NgLayerSpec } from "./components/ng-layer-tune/ng-layer-connector";
import { TErrorEvent } from "./components/ng-layer-tune/ng-layer-tune";
export namespace Components {
    interface NgLayerTune {
        "advancedControl": boolean;
        "forceRefreshShader": () => Promise<void>;
        "hideBackground": boolean;
        "hideCtrl": string;
        "hideZeroValue": boolean;
        "iFrameName": string;
        "iframeLayerSpec": NgLayerSpec;
        "initialOpacity": number;
        "nehubaName": string;
        "ngLayerName": string;
        "thresholdMax": number;
        "thresholdMin": number;
        "useIframeCtrl": boolean;
        "useNativeControl": boolean;
    }
}
declare global {
    interface HTMLNgLayerTuneElement extends Components.NgLayerTune, HTMLStencilElement {
    }
    var HTMLNgLayerTuneElement: {
        prototype: HTMLNgLayerTuneElement;
        new (): HTMLNgLayerTuneElement;
    };
    interface HTMLElementTagNameMap {
        "ng-layer-tune": HTMLNgLayerTuneElement;
    }
}
declare namespace LocalJSX {
    interface NgLayerTune {
        "advancedControl"?: boolean;
        "hideBackground"?: boolean;
        "hideCtrl"?: string;
        "hideZeroValue"?: boolean;
        "iFrameName"?: string;
        "iframeLayerSpec"?: NgLayerSpec;
        "initialOpacity"?: number;
        "nehubaName"?: string;
        "ngLayerName"?: string;
        "onErrorEmitter"?: (event: CustomEvent<TErrorEvent>) => void;
        "thresholdMax"?: number;
        "thresholdMin"?: number;
        "useIframeCtrl"?: boolean;
        "useNativeControl"?: boolean;
    }
    interface IntrinsicElements {
        "ng-layer-tune": NgLayerTune;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ng-layer-tune": LocalJSX.NgLayerTune & JSXBase.HTMLAttributes<HTMLNgLayerTuneElement>;
        }
    }
}
